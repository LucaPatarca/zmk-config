#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings =
                <&kp>,
                <&kp>;
        };
        skl: skl {
            compatible = "zmk,behavior-sticky-key";
            label = "SKL";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <3000>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <31 4>;
        };

        bootloader_right {
            bindings = <&trans>;
            key-positions = <>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp F      &kp P                &kp B                 &kp J  &kp L      &kp U    &kp Y  &kp SEMICOLON
&kp A  &kp R  &kp S      &kp T                &kp G                 &kp M  &kp N      &kp E    &kp I          &kp O
&kp Z  &kp X  &kp C      &kp D                &kp V                 &kp K  &kp H  &kp COMMA  &kp DOT       &kp FSLH
                     &kp SPACE  &ht LEFT_GUI ESCAPE  &ht LEFT_SHIFT ENTER  &to 1
            >;
        };

        left_layer {
            bindings = <
  &kp AMPERSAND     &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LESS_THAN  &kp GREATER_THAN       &kp RPAR  &kp RIGHT_BRACKET  &kp RIGHT_BRACE          &kp COLON
       &kp EXCL             &kp AT          &kp HASH              &kp DLLR      &kp PRCNT         &kp ASTRK  &kp BACKSPACE          &kp EQUAL         &kp BSLH   &kp SINGLE_QUOTE
&skl LEFT_SHIFT  &skl LEFT_CONTROL     &skl LEFT_ALT         &skl LEFT_GUI   &kp QUESTION    &kp UNDERSCORE      &kp MINUS           &kp PLUS         &kp PIPE  &kp DOUBLE_QUOTES
                                                                     &to 0        &kp TAB             &to 3          &to 2
            >;
        };

        right_layer {
            bindings = <
&kp ASTERISK  &kp N1  &kp N2  &kp N3          &kp PLUS        &kp HOME       &kp PG_DN     &kp PG_UP          &kp END  &kp DELETE
   &kp SLASH  &kp N4  &kp N5  &kp N6         &kp MINUS  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW      &trans
      &trans  &kp N7  &kp N8  &kp N9            &kp N0       &kp TILDE       &kp CARET        &trans       &kp PERIOD      &trans
                               &to 0  &ht LEFT_GUI TAB       &kp ENTER          &trans
            >;
        };

        tri_layer {
            bindings = <
&kp RA(X)  &trans    &kp C_VOLUME_UP  &kp C_BRI_UP  &bt BT_SEL 0          &trans  &kp RA(J)  &kp RA(H)     &trans          &trans
&kp RA(Z)  &trans  &kp C_VOLUME_DOWN  &kp C_BRI_DN  &bt BT_SEL 1          &trans     &trans  &kp RA(F)  &kp RA(V)   &kp RA(COMMA)
   &trans  &trans         &kp K_MUTE    &bt BT_CLR  &bt BT_SEL 2          &trans     &trans  &kp RA(G)  &kp RA(B)  &kp RA(PERIOD)
                                             &to 0        &trans  &kp LEFT_SHIFT     &trans
            >;
        };
    };
};
